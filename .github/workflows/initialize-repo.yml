name: Initialize Repository Analysis

on:
  workflow_dispatch:
    inputs:
      force_reinit:
        description: 'Force re-initialization (will clear existing data)'
        required: false
        default: 'false'
      incremental:
        description: 'Incremental update (only process new data since last run)'
        required: false
        default: 'true'
  
  issue_comment:
    types: [created]

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment'
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    
    steps:
      - name: Check Comment Trigger
        id: check
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
          COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
        run: |
          # Check if comment contains the trigger phrase
          if [[ "$COMMENT_BODY" == *"@Sofiabot Initialize"* ]] || [[ "$COMMENT_BODY" == *"@sofiabot initialize"* ]]; then
            echo "Trigger phrase found"
            
            # Check if author is owner or collaborator
            response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/collaborators/$COMMENT_AUTHOR")
            
            if [[ $? -eq 0 ]]; then
              echo "User is a collaborator"
              echo "should_run=true" >> $GITHUB_OUTPUT
            else
              echo "User is not a collaborator"
              echo "should_run=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "Trigger phrase not found"
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  initialize:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || needs.check-trigger.outputs.should_run == 'true'
    needs: [check-trigger]
    when: always()

    permissions:
      contents: read
      pull-requests: read
      issues: read
      repository-projects: read
      actions: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Dependencies
        run: |
          cd .github
          npm install
          
      - name: Add Reaction to Trigger Comment
        if: github.event_name == 'issue_comment'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions" \
            -d '{"content":"rocket"}'
          
      - name: Initialize Repository Analysis
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORCE_REINIT: ${{ github.event.inputs.force_reinit || 'false' }}
          INCREMENTAL: ${{ github.event.inputs.incremental || 'true' }}
        run: |
          cd .github
          node scripts/initialize-repo-enhanced.js
          
      - name: Post Success Comment
        if: success() && github.event_name == 'issue_comment'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments" \
            -d '{"body":"‚úÖ Repository initialization completed successfully! The analysis system is now up to date."}'
            
      - name: Post Failure Comment
        if: failure() && github.event_name == 'issue_comment'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments" \
            -d '{"body":"‚ùå Repository initialization failed. Please check the workflow logs for details."}'
          
      - name: Summary
        if: always()
        run: |
          echo "üéâ Repository analysis initialization completed!"
          echo "The system is now ready to provide reviewer suggestions on new PRs."

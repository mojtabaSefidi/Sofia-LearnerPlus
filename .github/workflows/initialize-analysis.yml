# initialize-analysis.yml
name: Initialize Repository Analysis

on:
  workflow_dispatch:
    inputs:
      force_reinit:
        description: 'Force re-initialization (will clear existing data)'
        required: false
        default: 'false'
  issue_comment:
    types: [created]

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check Comment Trigger
        id: check
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "Triggered manually"
          elif [ "${{ github.event_name }}" = "issue_comment" ]; then
            comment="${{ github.event.comment.body }}"
            if [[ "$comment" =~ @[Ss]ofiabot[[:space:]]+[Ii]nitialize ]]; then
              # Check if commenter is owner or collaborator
              author_association="${{ github.event.comment.author_association }}"
              if [[ "$author_association" == "OWNER" || "$author_association" == "MEMBER" || "$author_association" == "COLLABORATOR" ]]; then
                echo "should_run=true" >> $GITHUB_OUTPUT
                echo "Triggered by authorized comment: $comment"
              else
                echo "should_run=false" >> $GITHUB_OUTPUT
                echo "Comment author not authorized: $author_association"
              fi
            else
              echo "should_run=false" >> $GITHUB_OUTPUT
              echo "Comment does not match trigger pattern"
            fi
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "Not triggered by supported event"
          fi

  initialize:
    needs: check-trigger
    if: needs.check-trigger.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: read
      issues: read
      repository-projects: read
      actions: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Dependencies
        run: |
          cd .github
          npm install
          
      - name: Initialize Repository Analysis
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORCE_REINIT: ${{ github.event.inputs.force_reinit }}
        run: |
          cd .github
          node scripts/initialize-repo.js
          
      - name: Add Comment Response
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Repository initialization completed! The database has been updated with the latest repository data.'
            })
          
      - name: Summary
        run: |
          echo "ðŸŽ‰ Repository analysis initialization completed!"
          echo "Data collection summary:"
          echo "- Processed all commits and their file changes"
          echo "- Analyzed all pull requests (open, closed, merged)"
          echo "- Collected review data and comments"
          echo "- Handled contributor deduplication"
